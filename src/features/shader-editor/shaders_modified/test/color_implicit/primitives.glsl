#ifndef COLOR_IMPLICIT_PRIMITIVES_GLSL
#define COLOR_IMPLICIT_PRIMITIVES_GLSL

#include "../implicit/types.glsl"
#include "types.glsl"

// primitives.glsl
// Generated by GLSL Reorganizer
// Functions: 7 functions

// From: visualization.glsl:23
ColorImplicit LineSegment(vec2 p, vec2 start, vec2 end, vec4 color) {
    Implicit result = LineSegment(p, start, end);
    return ColorImplicit(result.Distance, result.Gradient, color);
}

// From: visualization.glsl:29
ColorImplicit Plane(vec2 p, vec2 origin, vec2 normal, vec4 color) {
    Implicit result = Plane(p, origin, normal);
    return ColorImplicit(result.Distance, result.Gradient, color);
}

// From: visualization.glsl:35
ColorImplicit Plane(vec3 p, vec3 origin, vec3 normal, vec4 color) {
    Implicit result = Plane(p, origin, normal);
    return ColorImplicit(result.Distance, result.Gradient, color);
}

// From: visualization.glsl:41
ColorImplicit Rectangle(vec2 p, vec2 min, vec2 max, vec4 color) {
    Implicit result = Rectangle(p, min, max);
    return ColorImplicit(result.Distance, result.Gradient, color);
}

// From: visualization.glsl:47
ColorImplicit RectangleCenterRotatedExp(vec2 p, vec2 center, vec2 size, float angle, vec4 color) {
    Implicit result = RectangleCenterRotatedExp(p, center, size, angle);
    return ColorImplicit(result.Distance, result.Gradient, color);
}

// From: visualization.glsl:53
ColorImplicit RectangleCentered(vec2 p, vec2 center, vec2 size, vec4 color) {
    Implicit result = RectangleCentered(p, center, size);
    return ColorImplicit(result.Distance, result.Gradient, color);
}

// From: visualization.glsl:59
ColorImplicit RectangleUGFSDFCenterRotated(vec2 p, vec2 center, float size, float angle, vec4 color) {
    Implicit result = RectangleUGFSDFCenterRotated(p, center, size, angle);
    return ColorImplicit(result.Distance, result.Gradient, color);
}

#endif // COLOR_IMPLICIT_PRIMITIVES_GLSL
