#ifndef COLOR_IMPLICIT_VISUALIZATION_GLSL
#define COLOR_IMPLICIT_VISUALIZATION_GLSL

#include "modifiers.glsl"

// visualization.glsl
// Generated by GLSL Reorganizer
// Functions: 6 functions

// From: visualization.glsl:11
vec4 fillImplicit(ColorImplicit a, vec4 base) {
    float interp = 0.5 - clamp(a.Distance / length(a.Gradient), -0.5, 0.5);
    return mix(base, a.Color, a.Color.a * interp);
}

// From: visualization.glsl:17
vec4 strokeImplicit(ColorImplicit a, float width, vec4 base) {
    float interp = clamp(width * 0.5 - abs(a.Distance) / length(a.Gradient), 0.0, 1.0);
    return mix(base, a.Color, a.Color.a * interp);
}

// From: visualization.glsl:91
vec4 drawImplicit(ColorImplicit a, vec4 base) {
    vec4 colorWarm = vec4(1.0, 0.4, 0.2, 1.0);
    vec4 colorCool = vec4(0.2, 0.4, 1.0, 1.0);
    float falloff = 100.0;
    float bandWidth = 20.0;
    float widthThin = 2.0;
    float widthThick = 4.0;

    vec4 color = a.Distance > 0.0 ? colorWarm : colorCool;
    vec4 opColor = mix(base, color, 0.1);
    ColorImplicit wave = TriangleWaveEvenPositive(a, bandWidth);

    wave.Color.a = max(0.2, 1.0 - abs(a.Distance) / falloff);
    opColor = strokeImplicit(wave, widthThin, opColor);
    opColor = strokeImplicit(a, widthThick, opColor);

    return opColor;
}

// From: visualization.glsl:111
vec4 drawLine(ColorImplicit a, vec4 base) {
ColorImplicit line = a;
line.Color.a = 0.75;
return strokeImplicit(line, 2.0, base);
}

// From: visualization.glsl:77
vec4 colorDerivative(ColorImplicit a, vec4 base) {
    vec4 colorWarm = vec4(1.0, 0.4, 0.2, 1.0);
    vec4 colorCool = vec4(0.2, 0.4, 1.0, 1.0);
    float widthThin = 2.0;

    vec4 opColor = mix(base, mix(colorCool, colorWarm, -a.Distance), 0.1);
    ColorImplicit wave = TriangleWaveEvenPositive(a, 0.1);

    opColor = strokeImplicit(wave, widthThin, opColor);

    return opColor;
}

// From: visualization.glsl:65
vec4 turboImplicit(ColorImplicit a, float range) {
    float widthThin = 2.0;
    float halfrange = range * 0.5;
    vec4 opColor = breeze4(abs(mod(a.Distance, range) - halfrange) / halfrange);

    ColorImplicit wave = TriangleWaveEvenPositive(a, range * 0.05);
    opColor = strokeImplicit(wave, widthThin, opColor);

    return opColor;
}

#endif // COLOR_IMPLICIT_VISUALIZATION_GLSL
